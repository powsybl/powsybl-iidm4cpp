name: CI

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
              name: "Ubuntu (GCC)",
              os: ubuntu-latest,
              build_type: "Release", cxx: "g++", clang_tidy: ""
          }
          - {
              name: "Ubuntu (Clang)",
              os: ubuntu-latest,
              build_type: "Release", cxx: "clang++", clang_tidy: "clang-tidy"
          }
          - {
              name: "MacOS (Clang)",
              os: macos-latest,
              build_type: "Release", cxx: "clang++", clang_tidy: "clang-tidy"
          }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

        # Workaround for https://github.com/actions/virtual-environments/issues/10
      - name: Boost
        shell: bash
        run: |
          ls -l $BOOST_ROOT_1_69_0/lib/

      - name: Create build environment
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
          -DCMAKE_CXX_CLANG_TIDY=${{ matrix.config.clang_tidy }}
          -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }}
          -DBOOST_ROOT=$BOOST_ROOT_1_69_0
          -DBoost_ADDITIONAL_VERSIONS=1.69.0
          -DBoost_ARCHITECTURE=-x64
          -DBoost_USE_MULTITHREADED=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --parallel

      - name: Tests
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --target tests
